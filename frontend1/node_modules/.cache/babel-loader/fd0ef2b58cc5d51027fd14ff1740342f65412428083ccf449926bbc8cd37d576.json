{"ast":null,"code":"function addToLocalStorage(key, value) {\n  if (typeof value === \"object\") {\n    localStorage.setItem(key, JSON.stringify(value));\n  } else {\n    localStorage.setItem(key, value);\n  }\n}\nfunction getFromLocalStorage(key) {\n  let value = localStorage.getItem(key);\n  if (!value) {\n    return null;\n  }\n  try {\n    return JSON.parse(value);\n  } catch (error) {\n    return value;\n  }\n}\nfunction updateLocalStorage(key, updatedValue) {\n  let value = localStorage.getItem(key);\n  if (!value) {\n    return null;\n  }\n  try {\n    localStorage.setItem(key, updatedValue);\n  } catch (error) {\n    return value;\n  }\n}\nfunction removeFromLocalStorage(key) {\n  localStorage.removeItem(key);\n}\nconst methods = {\n  addToLocalStorage,\n  updateLocalStorage,\n  removeFromLocalStorage,\n  getFromLocalStorage\n};\nexport default methods;","map":{"version":3,"names":["addToLocalStorage","key","value","localStorage","setItem","JSON","stringify","getFromLocalStorage","getItem","parse","error","updateLocalStorage","updatedValue","removeFromLocalStorage","removeItem","methods"],"sources":["D:/sem 4/cipherschools/project/frontend/src/utils/localstorage.js"],"sourcesContent":["function addToLocalStorage(key, value) {\r\n    if (typeof value ===\"object\") {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n    }else{localStorage.setItem(key, value) ;\r\n    }\r\n}\r\n\r\nfunction getFromLocalStorage(key) {\r\n    let value =localStorage.getItem(key);\r\n\r\n    if (!value) {\r\n    return null;\r\n    }\r\n    try {\r\n    return JSON.parse(value) ;\r\n    } catch (error) {\r\n    return value;\r\n    }\r\n}\r\nfunction updateLocalStorage(key,updatedValue) {\r\n    let value =localStorage.getItem(key);\r\n    if (!value) {\r\n    return null;\r\n    }\r\n    try {\r\n    localStorage.setItem(key,updatedValue);\r\n    } catch (error) {\r\n    return value;\r\n    }\r\n}\r\n\r\nfunction removeFromLocalStorage(key) {\r\n    localStorage.removeItem(key);\r\n}\r\nconst methods={\r\n    addToLocalStorage,\r\n    updateLocalStorage,\r\n    removeFromLocalStorage,\r\n    getFromLocalStorage,\r\n}\r\n\r\nexport default methods;\r\n"],"mappings":"AAAA,SAASA,iBAAiBA,CAACC,GAAG,EAAEC,KAAK,EAAE;EACnC,IAAI,OAAOA,KAAK,KAAI,QAAQ,EAAE;IAC9BC,YAAY,CAACC,OAAO,CAACH,GAAG,EAAEI,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC,CAAC;EAChD,CAAC,MAAI;IAACC,YAAY,CAACC,OAAO,CAACH,GAAG,EAAEC,KAAK,CAAC;EACtC;AACJ;AAEA,SAASK,mBAAmBA,CAACN,GAAG,EAAE;EAC9B,IAAIC,KAAK,GAAEC,YAAY,CAACK,OAAO,CAACP,GAAG,CAAC;EAEpC,IAAI,CAACC,KAAK,EAAE;IACZ,OAAO,IAAI;EACX;EACA,IAAI;IACJ,OAAOG,IAAI,CAACI,KAAK,CAACP,KAAK,CAAC;EACxB,CAAC,CAAC,OAAOQ,KAAK,EAAE;IAChB,OAAOR,KAAK;EACZ;AACJ;AACA,SAASS,kBAAkBA,CAACV,GAAG,EAACW,YAAY,EAAE;EAC1C,IAAIV,KAAK,GAAEC,YAAY,CAACK,OAAO,CAACP,GAAG,CAAC;EACpC,IAAI,CAACC,KAAK,EAAE;IACZ,OAAO,IAAI;EACX;EACA,IAAI;IACJC,YAAY,CAACC,OAAO,CAACH,GAAG,EAACW,YAAY,CAAC;EACtC,CAAC,CAAC,OAAOF,KAAK,EAAE;IAChB,OAAOR,KAAK;EACZ;AACJ;AAEA,SAASW,sBAAsBA,CAACZ,GAAG,EAAE;EACjCE,YAAY,CAACW,UAAU,CAACb,GAAG,CAAC;AAChC;AACA,MAAMc,OAAO,GAAC;EACVf,iBAAiB;EACjBW,kBAAkB;EAClBE,sBAAsB;EACtBN;AACJ,CAAC;AAED,eAAeQ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}