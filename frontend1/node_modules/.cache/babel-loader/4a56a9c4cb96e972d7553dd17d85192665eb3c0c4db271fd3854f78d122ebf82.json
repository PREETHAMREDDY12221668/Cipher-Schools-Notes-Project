{"ast":null,"code":"var _jsxFileName = \"D:\\\\sem 4\\\\cipherschools\\\\project\\\\frontend\\\\src\\\\pages\\\\notes\\\\index.js\",\n  _s = $RefreshSig$();\n// // import React, { useEffect, useState } from 'react';\n// // import styles from './notes.module.scss';\n// // import Wrapper from '../../components/HOC/wrapper';\n// // import Greeting from '../../components/atoms/greeting';\n// // import Note from '../../components/cards/note';\n// // import notesData from '../../data/notes.json';\n// // import utils from '../../utils/localstorage.js';\n// // import types from '../../config/types.js';\n\n// // function Notes() {\n// //   const [notesCollection, setNotesCollection] = useState([]);\n// //   const data = utils.getFromLocalStorage(types.NOTES_DATA);\n\n// //   useEffect(() => {\n\n// //     if (data && data.length) {\n// //       setNotesCollection(data);\n// //       return;\n// //     } \n// //       utils.addToLocalStorage(types.NOTES_DATA, notesData);\n// //       setNotesCollection(notesData);\n\n// //   }, [data]); // Empty dependency array ensures this effect runs only once\n\n// //   return (\n// //     <section className={styles.container}>\n// //       <Greeting />\n// //       <main>\n// //         {notesCollection.map((note) => (\n// //           <Note key={note.id} text={note.text.trim()} date={note.createdAt} color={note.color} />\n// //         ))}\n// //       </main>\n// //     </section>\n// //   );\n// // }\n\n// // export default Wrapper(Notes);\n\n// import React, { useEffect, useState } from 'react';\n// import styles from './notes.module.scss';\n// import Wrapper from '../../components/HOC/wrapper';\n// import Greeting from '../../components/atoms/greeting';\n// import Note from '../../components/cards/note';\n// import { toast } from 'react-toastify';\n// import utils from '../../utils/localstorage.js';\n\n// function Notes() {\n//   const [notesCollection, setNotesCollection] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const authToken = utils.getFromLocalStorage('auth_key');\n//   const Now =new Date().toISOString();\n\n//   useEffect(() => {\n//     if (!authToken) {\n//       toast.error(\"Unauthorized access!\");\n//       setLoading(false);\n//       return;\n//     }\n\n//     fetch(\"http://localhost:3001/api/notes\", {\n//       method: 'GET',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         authorization: authToken,\n//       }\n//     })\n//     .then((res) => res.json())\n//     .then((data) => {\n//       if (data.success) {\n//         setNotesCollection(data.notes);\n//       } else {\n//         setError(data.message || \"Failed to fetch notes\");\n//       }\n//       setLoading(false);\n//     })\n//     .catch((error) => {\n//       setError(\"Something went wrong\");\n//       setLoading(false);\n//     });\n//   }, [authToken]);\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div>Error: {error}</div>;\n//   }\n\n//   return (\n//     <section className={styles.container}>\n//       <Greeting />\n//       <main>\n//       <Note text=\"Create New Note...\" date={Now}  color=\"var(--opaque-light-cyan)\" />\n//           {notesCollection.map((note) => (\n//           <Note key={note._id} text={note.text.trim()} date={note.createdAt} color={note.color} />\n//         ))}\n\n//       </main>\n//     </section>\n//   );\n// }\n\n// export default Wrapper(Notes);\nimport React, { useEffect, useState } from 'react';\nimport styles from './notes.module.scss';\nimport Wrapper from '../../components/HOC/wrapper';\nimport Greeting from '../../components/atoms/greeting';\nimport Note from '../../components/cards/note';\nimport { toast } from 'react-toastify';\nimport utils from '../../utils/localstorage.js';\nimport Loader from '../../components/shared/loader/index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Notes() {\n  _s();\n  const [notesCollection, setNotesCollection] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const authToken = utils.getFromLocalStorage('auth_key');\n  const Now = new Date().toISOString();\n  useEffect(() => {\n    if (!authToken) {\n      toast.error(\"Unauthorized access!\");\n      setLoading(false);\n      return;\n    }\n    fetch(\"http://localhost:3001/api/notes\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: authToken\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        setNotesCollection(data.notes);\n      } else {\n        setError(data.message || \"Failed to fetch notes\");\n      }\n      setLoading(false);\n    }).catch(error => {\n      setError(\"Something went wrong\");\n      setLoading(false);\n    });\n  }, [authToken]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Greeting, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Note, {\n        text: \"Create New Note...\",\n        date: Now,\n        color: \"var(--opaque-light-cyan)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), notesCollection.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        _id: note._id,\n        text: note.text,\n        date: note.createdAt,\n        color: note.color\n      }, note._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n_s(Notes, \"5EzaPO9tRQX0Eu+u7XzVMDS8JPQ=\");\n_c = Notes;\nexport default _c2 = Wrapper(Notes);\nvar _c, _c2;\n$RefreshReg$(_c, \"Notes\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","styles","Wrapper","Greeting","Note","toast","utils","Loader","jsxDEV","_jsxDEV","Notes","_s","notesCollection","setNotesCollection","loading","setLoading","error","setError","authToken","getFromLocalStorage","Now","Date","toISOString","fetch","method","headers","authorization","then","res","json","data","success","notes","message","catch","fileName","_jsxFileName","lineNumber","columnNumber","children","className","container","text","date","color","map","note","_id","createdAt","_c","_c2","$RefreshReg$"],"sources":["D:/sem 4/cipherschools/project/frontend/src/pages/notes/index.js"],"sourcesContent":["// // import React, { useEffect, useState } from 'react';\r\n// // import styles from './notes.module.scss';\r\n// // import Wrapper from '../../components/HOC/wrapper';\r\n// // import Greeting from '../../components/atoms/greeting';\r\n// // import Note from '../../components/cards/note';\r\n// // import notesData from '../../data/notes.json';\r\n// // import utils from '../../utils/localstorage.js';\r\n// // import types from '../../config/types.js';\r\n\r\n// // function Notes() {\r\n// //   const [notesCollection, setNotesCollection] = useState([]);\r\n// //   const data = utils.getFromLocalStorage(types.NOTES_DATA);\r\n\r\n// //   useEffect(() => {\r\n\r\n    \r\n// //     if (data && data.length) {\r\n// //       setNotesCollection(data);\r\n// //       return;\r\n// //     } \r\n// //       utils.addToLocalStorage(types.NOTES_DATA, notesData);\r\n// //       setNotesCollection(notesData);\r\n    \r\n// //   }, [data]); // Empty dependency array ensures this effect runs only once\r\n\r\n// //   return (\r\n// //     <section className={styles.container}>\r\n// //       <Greeting />\r\n// //       <main>\r\n// //         {notesCollection.map((note) => (\r\n// //           <Note key={note.id} text={note.text.trim()} date={note.createdAt} color={note.color} />\r\n// //         ))}\r\n// //       </main>\r\n// //     </section>\r\n// //   );\r\n// // }\r\n\r\n// // export default Wrapper(Notes);\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import styles from './notes.module.scss';\r\n// import Wrapper from '../../components/HOC/wrapper';\r\n// import Greeting from '../../components/atoms/greeting';\r\n// import Note from '../../components/cards/note';\r\n// import { toast } from 'react-toastify';\r\n// import utils from '../../utils/localstorage.js';\r\n\r\n// function Notes() {\r\n//   const [notesCollection, setNotesCollection] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const authToken = utils.getFromLocalStorage('auth_key');\r\n//   const Now =new Date().toISOString();\r\n\r\n//   useEffect(() => {\r\n//     if (!authToken) {\r\n//       toast.error(\"Unauthorized access!\");\r\n//       setLoading(false);\r\n//       return;\r\n//     }\r\n\r\n//     fetch(\"http://localhost:3001/api/notes\", {\r\n//       method: 'GET',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//         authorization: authToken,\r\n//       }\r\n//     })\r\n//     .then((res) => res.json())\r\n//     .then((data) => {\r\n//       if (data.success) {\r\n//         setNotesCollection(data.notes);\r\n//       } else {\r\n//         setError(data.message || \"Failed to fetch notes\");\r\n//       }\r\n//       setLoading(false);\r\n//     })\r\n//     .catch((error) => {\r\n//       setError(\"Something went wrong\");\r\n//       setLoading(false);\r\n//     });\r\n//   }, [authToken]);\r\n\r\n//   if (loading) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   if (error) {\r\n//     return <div>Error: {error}</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <section className={styles.container}>\r\n//       <Greeting />\r\n//       <main>\r\n//       <Note text=\"Create New Note...\" date={Now}  color=\"var(--opaque-light-cyan)\" />\r\n//           {notesCollection.map((note) => (\r\n//           <Note key={note._id} text={note.text.trim()} date={note.createdAt} color={note.color} />\r\n//         ))}\r\n        \r\n//       </main>\r\n//     </section>\r\n//   );\r\n// }\r\n\r\n// export default Wrapper(Notes);\r\nimport React, { useEffect, useState } from 'react';\r\nimport styles from './notes.module.scss';\r\nimport Wrapper from '../../components/HOC/wrapper';\r\nimport Greeting from '../../components/atoms/greeting';\r\nimport Note from '../../components/cards/note';\r\nimport { toast } from 'react-toastify';\r\nimport utils from '../../utils/localstorage.js';\r\nimport Loader from '../../components/shared/loader/index.js';\r\n\r\nfunction Notes() {\r\n  const [notesCollection, setNotesCollection] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const authToken = utils.getFromLocalStorage('auth_key');\r\n  const Now = new Date().toISOString();\r\n\r\n  useEffect(() => {\r\n    if (!authToken) {\r\n      toast.error(\"Unauthorized access!\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    fetch(\"http://localhost:3001/api/notes\", {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: authToken,\r\n      }\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      if (data.success) {\r\n        setNotesCollection(data.notes);\r\n      } else {\r\n        setError(data.message || \"Failed to fetch notes\");\r\n      }\r\n      setLoading(false);\r\n    })\r\n    .catch((error) => {\r\n      setError(\"Something went wrong\");\r\n      setLoading(false);\r\n    });\r\n  }, [authToken]);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <section className={styles.container}>\r\n      <Greeting />\r\n      <main>\r\n        <Note text=\"Create New Note...\" date={Now} color=\"var(--opaque-light-cyan)\" />\r\n        {notesCollection.map((note) => (\r\n          <Note key={note._id} _id={note._id} text={note.text} date={note.createdAt} color={note.color} />\r\n        ))}\r\n      </main>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Wrapper(Notes);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}