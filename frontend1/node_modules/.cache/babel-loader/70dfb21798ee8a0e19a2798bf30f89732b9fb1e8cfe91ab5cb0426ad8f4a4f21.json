{"ast":null,"code":"var _jsxFileName = \"D:\\\\sem 4\\\\cipherschools\\\\project\\\\frontend\\\\src\\\\components\\\\shared\\\\side-bar\\\\index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styles from './sidebar.module.scss';\nimport BrandLogo from '../brand';\nimport { Icon } from '@iconify/react';\nimport sidebaritems from \"../../../data/sidebar.json\";\nimport { useNavigate } from 'react-router-dom';\nimport utils from '../../../utils/localstorage';\nimport types from '../../../config/types';\nimport { createNote } from '../../../utils/notes'; // Import the createNote function\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SideBar() {\n  _s();\n  const navigate = useNavigate();\n  const handleClick = async item => {\n    if (item.path === '/notes') {\n      try {\n        const newNote = await createNote(); // Call the API to create a new note\n        const data = utils.getFromLocalStorage(types.NOTES_DATA) || [];\n        const updatedData = [newNote, ...data]; // Add the new note to the local data\n        utils.addToLocalStorage(types.NOTES_DATA, updatedData);\n        toast.success(\"New note created successfully!\");\n      } catch (error) {\n        toast.error(error.message || \"Failed to create note\");\n      }\n    }\n  };\n  const handleLogout = () => {\n    utils.removeFromLocalStorage('auth_key');\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: styles.sidebar,\n    children: [/*#__PURE__*/_jsxDEV(BrandLogo, {\n      visible: true,\n      type: \"dark\",\n      className: styles.logo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: sidebaritems.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"article\", {\n          className: styles.item,\n          onClick: () => handleClick(item),\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: item.icon,\n            color: index === 1 ? \"var(--grey-300)\" : \" var(--white)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: styles.logout,\n      children: /*#__PURE__*/_jsxDEV(Icon, {\n        icon: 'material-symbols:logout',\n        onClick: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(SideBar, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = SideBar;\nexport default SideBar;\nvar _c;\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"names":["React","styles","BrandLogo","Icon","sidebaritems","useNavigate","utils","types","createNote","toast","jsxDEV","_jsxDEV","SideBar","_s","navigate","handleClick","item","path","newNote","data","getFromLocalStorage","NOTES_DATA","updatedData","addToLocalStorage","success","error","message","handleLogout","removeFromLocalStorage","className","sidebar","children","visible","type","logo","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","icon","color","logout","_c","$RefreshReg$"],"sources":["D:/sem 4/cipherschools/project/frontend/src/components/shared/side-bar/index.js"],"sourcesContent":["import React from 'react'\r\nimport styles from './sidebar.module.scss'\r\nimport BrandLogo from '../brand'\r\nimport { Icon } from '@iconify/react'\r\nimport sidebaritems from \"../../../data/sidebar.json\"\r\nimport { useNavigate } from 'react-router-dom'\r\nimport utils from '../../../utils/localstorage'\r\nimport types from '../../../config/types'\r\nimport { createNote } from '../../../utils/notes'  // Import the createNote function\r\nimport { toast } from 'react-toastify'\r\n\r\nfunction SideBar() {\r\n  const navigate = useNavigate()\r\n\r\n  const handleClick = async (item) => {\r\n    if (item.path === '/notes') {\r\n      try {\r\n        const newNote = await createNote();  // Call the API to create a new note\r\n        const data = utils.getFromLocalStorage(types.NOTES_DATA) || [];\r\n        const updatedData = [newNote, ...data];  // Add the new note to the local data\r\n        utils.addToLocalStorage(types.NOTES_DATA, updatedData);\r\n        toast.success(\"New note created successfully!\");\r\n      } catch (error) {\r\n        toast.error(error.message || \"Failed to create note\");\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    utils.removeFromLocalStorage('auth_key');\r\n    navigate(\"/\");\r\n  }\r\n\r\n  return (\r\n    <article className={styles.sidebar}>\r\n      <BrandLogo visible={true} type={\"dark\"} className={styles.logo} />\r\n      <section>\r\n        {\r\n          sidebaritems.map((item, index) => {\r\n            return (\r\n              <article key={index} className={styles.item} onClick={() => handleClick(item)}>\r\n                <Icon icon={item.icon} color={index === 1 ? \"var(--grey-300)\" : \" var(--white)\"} />\r\n              </article>\r\n            );\r\n          })\r\n        }\r\n      </section>\r\n      <article className={styles.logout}>\r\n        <Icon icon={'material-symbols:logout'} onClick={handleLogout} />\r\n      </article>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default SideBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAOC,SAAS,MAAM,UAAU;AAChC,SAASC,IAAI,QAAQ,gBAAgB;AACrC,OAAOC,YAAY,MAAM,4BAA4B;AACrD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,6BAA6B;AAC/C,OAAOC,KAAK,MAAM,uBAAuB;AACzC,SAASC,UAAU,QAAQ,sBAAsB,EAAE;AACnD,SAASC,KAAK,QAAQ,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,WAAW,GAAG,MAAOC,IAAI,IAAK;IAClC,IAAIA,IAAI,CAACC,IAAI,KAAK,QAAQ,EAAE;MAC1B,IAAI;QACF,MAAMC,OAAO,GAAG,MAAMV,UAAU,CAAC,CAAC,CAAC,CAAE;QACrC,MAAMW,IAAI,GAAGb,KAAK,CAACc,mBAAmB,CAACb,KAAK,CAACc,UAAU,CAAC,IAAI,EAAE;QAC9D,MAAMC,WAAW,GAAG,CAACJ,OAAO,EAAE,GAAGC,IAAI,CAAC,CAAC,CAAE;QACzCb,KAAK,CAACiB,iBAAiB,CAAChB,KAAK,CAACc,UAAU,EAAEC,WAAW,CAAC;QACtDb,KAAK,CAACe,OAAO,CAAC,gCAAgC,CAAC;MACjD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdhB,KAAK,CAACgB,KAAK,CAACA,KAAK,CAACC,OAAO,IAAI,uBAAuB,CAAC;MACvD;IACF;EACF,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBrB,KAAK,CAACsB,sBAAsB,CAAC,UAAU,CAAC;IACxCd,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,oBACEH,OAAA;IAASkB,SAAS,EAAE5B,MAAM,CAAC6B,OAAQ;IAAAC,QAAA,gBACjCpB,OAAA,CAACT,SAAS;MAAC8B,OAAO,EAAE,IAAK;MAACC,IAAI,EAAE,MAAO;MAACJ,SAAS,EAAE5B,MAAM,CAACiC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClE3B,OAAA;MAAAoB,QAAA,EAEI3B,YAAY,CAACmC,GAAG,CAAC,CAACvB,IAAI,EAAEwB,KAAK,KAAK;QAChC,oBACE7B,OAAA;UAAqBkB,SAAS,EAAE5B,MAAM,CAACe,IAAK;UAACyB,OAAO,EAAEA,CAAA,KAAM1B,WAAW,CAACC,IAAI,CAAE;UAAAe,QAAA,eAC5EpB,OAAA,CAACR,IAAI;YAACuC,IAAI,EAAE1B,IAAI,CAAC0B,IAAK;YAACC,KAAK,EAAEH,KAAK,KAAK,CAAC,GAAG,iBAAiB,GAAG;UAAgB;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC,GADvEE,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CAAC;MAEd,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEG,CAAC,eACV3B,OAAA;MAASkB,SAAS,EAAE5B,MAAM,CAAC2C,MAAO;MAAAb,QAAA,eAChCpB,OAAA,CAACR,IAAI;QAACuC,IAAI,EAAE,yBAA0B;QAACD,OAAO,EAAEd;MAAa;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd;AAACzB,EAAA,CAzCQD,OAAO;EAAA,QACGP,WAAW;AAAA;AAAAwC,EAAA,GADrBjC,OAAO;AA2ChB,eAAeA,OAAO;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}