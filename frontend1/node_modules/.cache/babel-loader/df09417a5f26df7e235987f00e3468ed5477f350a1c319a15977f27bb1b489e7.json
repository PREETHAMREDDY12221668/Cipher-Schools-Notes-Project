{"ast":null,"code":"var _jsxFileName = \"D:\\\\sem 4\\\\cipherschools\\\\project\\\\frontend\\\\src\\\\pages\\\\notes\\\\index.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import styles from './notes.module.scss';\n// import Wrapper from '../../components/HOC/wrapper';\n// import Greeting from '../../components/atoms/greeting';\n// import Note from '../../components/cards/note';\n// import notesData from '../../data/notes.json';\n// import utils from '../../utils/localstorage.js';\n// import types from '../../config/types.js';\n\n// function Notes() {\n//   const [notesCollection, setNotesCollection] = useState([]);\n//   const data = utils.getFromLocalStorage(types.NOTES_DATA);\n\n//   useEffect(() => {\n\n//     if (data && data.length) {\n//       setNotesCollection(data);\n//       return;\n//     } \n//       utils.addToLocalStorage(types.NOTES_DATA, notesData);\n//       setNotesCollection(notesData);\n\n//   }, [data]); // Empty dependency array ensures this effect runs only once\n\n//   return (\n//     <section className={styles.container}>\n//       <Greeting />\n//       <main>\n//         {notesCollection.map((note) => (\n//           <Note key={note.id} text={note.text.trim()} date={note.createdAt} color={note.color} />\n//         ))}\n//       </main>\n//     </section>\n//   );\n// }\n\n// export default Wrapper(Notes);\n\nimport React, { useEffect, useState } from 'react';\nimport styles from './notes.module.scss';\nimport Wrapper from '../../components/HOC/wrapper';\nimport Greeting from '../../components/atoms/greeting';\nimport Note from '../../components/cards/note';\nimport { toast } from 'react-toastify';\nimport utils from '../../utils/localstorage.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Notes() {\n  _s();\n  const [notesCollection, setNotesCollection] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const authToken = utils.getFromLocalStorage('auth_key');\n  useEffect(() => {\n    if (!authToken) {\n      toast.error(\"Unauthorized access!\");\n      setLoading(false);\n      return;\n    }\n    fetch(\"http://localhost:3001/api/notes\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: authToken\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        setNotesCollection(data.notes);\n      } else {\n        setError(data.message || \"Failed to fetch notes\");\n      }\n      setLoading(false);\n    }).catch(error => {\n      setError(\"Something went wrong\");\n      setLoading(false);\n    });\n  }, [authToken]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Greeting, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Type something...\",\n      className: styles.textarea,\n      onChange: e => e.target.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: notesCollection.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        text: note.text.trim(),\n        date: note.createdAt,\n        color: note.color\n      }, note._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(Notes, \"5EzaPO9tRQX0Eu+u7XzVMDS8JPQ=\");\n_c = Notes;\nexport default _c2 = Wrapper(Notes);\nvar _c, _c2;\n$RefreshReg$(_c, \"Notes\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","styles","Wrapper","Greeting","Note","toast","utils","jsxDEV","_jsxDEV","Notes","_s","notesCollection","setNotesCollection","loading","setLoading","error","setError","authToken","getFromLocalStorage","fetch","method","headers","authorization","then","res","json","data","success","notes","message","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","className","container","placeholder","textarea","onChange","e","target","value","map","note","text","trim","date","createdAt","color","_id","_c","_c2","$RefreshReg$"],"sources":["D:/sem 4/cipherschools/project/frontend/src/pages/notes/index.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import styles from './notes.module.scss';\r\n// import Wrapper from '../../components/HOC/wrapper';\r\n// import Greeting from '../../components/atoms/greeting';\r\n// import Note from '../../components/cards/note';\r\n// import notesData from '../../data/notes.json';\r\n// import utils from '../../utils/localstorage.js';\r\n// import types from '../../config/types.js';\r\n\r\n// function Notes() {\r\n//   const [notesCollection, setNotesCollection] = useState([]);\r\n//   const data = utils.getFromLocalStorage(types.NOTES_DATA);\r\n\r\n//   useEffect(() => {\r\n\r\n    \r\n//     if (data && data.length) {\r\n//       setNotesCollection(data);\r\n//       return;\r\n//     } \r\n//       utils.addToLocalStorage(types.NOTES_DATA, notesData);\r\n//       setNotesCollection(notesData);\r\n    \r\n//   }, [data]); // Empty dependency array ensures this effect runs only once\r\n\r\n//   return (\r\n//     <section className={styles.container}>\r\n//       <Greeting />\r\n//       <main>\r\n//         {notesCollection.map((note) => (\r\n//           <Note key={note.id} text={note.text.trim()} date={note.createdAt} color={note.color} />\r\n//         ))}\r\n//       </main>\r\n//     </section>\r\n//   );\r\n// }\r\n\r\n// export default Wrapper(Notes);\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport styles from './notes.module.scss';\r\nimport Wrapper from '../../components/HOC/wrapper';\r\nimport Greeting from '../../components/atoms/greeting';\r\nimport Note from '../../components/cards/note';\r\nimport { toast } from 'react-toastify';\r\nimport utils from '../../utils/localstorage.js';\r\n\r\nfunction Notes() {\r\n  const [notesCollection, setNotesCollection] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const authToken = utils.getFromLocalStorage('auth_key');\r\n\r\n  useEffect(() => {\r\n    if (!authToken) {\r\n      toast.error(\"Unauthorized access!\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    fetch(\"http://localhost:3001/api/notes\", {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: authToken,\r\n      }\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      if (data.success) {\r\n        setNotesCollection(data.notes);\r\n      } else {\r\n        setError(data.message || \"Failed to fetch notes\");\r\n      }\r\n      setLoading(false);\r\n    })\r\n    .catch((error) => {\r\n      setError(\"Something went wrong\");\r\n      setLoading(false);\r\n    });\r\n  }, [authToken]);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <section className={styles.container}>\r\n      <Greeting />\r\n      <textarea \r\n        placeholder=\"Type something...\"\r\n        className={styles.textarea}\r\n        onChange={(e) => (e.target.value)}\r\n      />\r\n      <main>\r\n        {notesCollection.map((note) => (\r\n          <Note key={note._id} text={note.text.trim()} date={note.createdAt} color={note.color} />\r\n        ))}\r\n      </main>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Wrapper(Notes);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}