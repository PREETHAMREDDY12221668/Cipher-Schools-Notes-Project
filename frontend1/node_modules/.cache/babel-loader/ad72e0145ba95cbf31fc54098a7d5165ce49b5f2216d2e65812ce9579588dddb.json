{"ast":null,"code":"var _jsxFileName = \"D:\\\\sem 4\\\\cipherschools\\\\project\\\\frontend\\\\src\\\\pages\\\\notes\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styles from './notes.module.scss';\nimport Wrapper from '../../components/HOC/wrapper';\nimport Greeting from '../../components/atoms/greeting';\nimport Note from '../../components/cards/note';\nimport notesData from '../../data/notes.json';\nimport utils from '../../utils/localstorage.js';\nimport types from '../../config/types.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Notes() {\n  _s();\n  const [notesCollection, setNotesCollection] = useState([]);\n  const data = utils.getFromLocalStorage(types.NOTES_DATA);\n  useEffect(() => {\n    // to prevent an empty screen at first\n    if (data && data.length) {\n      setNotesCollection(data);\n      return;\n    }\n    utils.addToLocalStorage(types.NOTES_DATA, notesData);\n    setNotesCollection(notesData);\n  }, []); // Empty dependency array ensures this effect runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Greeting, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: notesCollection.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        text: note.text.trim(),\n        date: note.createdAt,\n        color: note.color\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Notes, \"B4FL5hYOtBQpkmGBEz0KLs8Le9E=\");\n_c = Notes;\nexport default _c2 = Wrapper(Notes);\nvar _c, _c2;\n$RefreshReg$(_c, \"Notes\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","styles","Wrapper","Greeting","Note","notesData","utils","types","jsxDEV","_jsxDEV","Notes","_s","notesCollection","setNotesCollection","data","getFromLocalStorage","NOTES_DATA","length","addToLocalStorage","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","map","note","text","trim","date","createdAt","color","id","_c","_c2","$RefreshReg$"],"sources":["D:/sem 4/cipherschools/project/frontend/src/pages/notes/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styles from './notes.module.scss';\r\nimport Wrapper from '../../components/HOC/wrapper';\r\nimport Greeting from '../../components/atoms/greeting';\r\nimport Note from '../../components/cards/note';\r\nimport notesData from '../../data/notes.json';\r\nimport utils from '../../utils/localstorage.js';\r\nimport types from '../../config/types.js';\r\n\r\nfunction Notes() {\r\n  const [notesCollection, setNotesCollection] = useState([]);\r\n  const data = utils.getFromLocalStorage(types.NOTES_DATA);\r\n\r\n  useEffect(() => {\r\n\r\n    // to prevent an empty screen at first\r\n    if (data && data.length) {\r\n      setNotesCollection(data);\r\n      return;\r\n    } \r\n      utils.addToLocalStorage(types.NOTES_DATA, notesData);\r\n      setNotesCollection(notesData);\r\n    \r\n  }, []); // Empty dependency array ensures this effect runs only once\r\n\r\n  return (\r\n    <section className={styles.container}>\r\n      <Greeting />\r\n      <main>\r\n        {notesCollection.map((note) => (\r\n          <Note key={note.id} text={note.text.trim()} date={note.createdAt} color={note.color} />\r\n        ))}\r\n      </main>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Wrapper(Notes);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,OAAO,MAAM,8BAA8B;AAClD,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,IAAI,MAAM,6BAA6B;AAC9C,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,KAAK,MAAM,6BAA6B;AAC/C,OAAOC,KAAK,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAMc,IAAI,GAAGR,KAAK,CAACS,mBAAmB,CAACR,KAAK,CAACS,UAAU,CAAC;EAExDjB,SAAS,CAAC,MAAM;IAEd;IACA,IAAIe,IAAI,IAAIA,IAAI,CAACG,MAAM,EAAE;MACvBJ,kBAAkB,CAACC,IAAI,CAAC;MACxB;IACF;IACER,KAAK,CAACY,iBAAiB,CAACX,KAAK,CAACS,UAAU,EAAEX,SAAS,CAAC;IACpDQ,kBAAkB,CAACR,SAAS,CAAC;EAEjC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEI,OAAA;IAASU,SAAS,EAAElB,MAAM,CAACmB,SAAU;IAAAC,QAAA,gBACnCZ,OAAA,CAACN,QAAQ;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACZhB,OAAA;MAAAY,QAAA,EACGT,eAAe,CAACc,GAAG,CAAEC,IAAI,iBACxBlB,OAAA,CAACL,IAAI;QAAewB,IAAI,EAAED,IAAI,CAACC,IAAI,CAACC,IAAI,CAAC,CAAE;QAACC,IAAI,EAAEH,IAAI,CAACI,SAAU;QAACC,KAAK,EAAEL,IAAI,CAACK;MAAM,GAAzEL,IAAI,CAACM,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoE,CACvF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACd,EAAA,CA1BQD,KAAK;AAAAwB,EAAA,GAALxB,KAAK;AA4Bd,eAAAyB,GAAA,GAAejC,OAAO,CAACQ,KAAK,CAAC;AAAC,IAAAwB,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}