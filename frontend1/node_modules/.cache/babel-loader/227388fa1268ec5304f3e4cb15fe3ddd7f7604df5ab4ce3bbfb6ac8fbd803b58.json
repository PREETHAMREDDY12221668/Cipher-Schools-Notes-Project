{"ast":null,"code":"var _jsxFileName = \"D:\\\\sem 4\\\\cipherschools\\\\project\\\\frontend\\\\src\\\\components\\\\shared\\\\side-bar\\\\index.js\",\n  _s = $RefreshSig$();\n// import React from 'react'\n// import styles from './sidebar.module.scss'\n// import BrandLogo from '../brand'\n// import {Icon} from '@iconify/react'\n// import sidebaritems from \"../../../data/sidebar.json\"\n// import { useNavigate } from 'react-router-dom'\n// import utils from '../../../utils/localstorage'\n// import types from '../../../config/types'\n\n// function SideBar() {\n//   const navigate=useNavigate()\n\n// const handleClick = (item) => {\n//   if (item.path === '/notes') {\n//       const data = utils.getFromLocalStorage(types.NOTES_DATA);\n//       const updatedData = [{\n//           id: data.length + 1,\n//           color: \"rgba(174, 223, 232, 0.6)\",\n//           text: \"\",  // Ensure 'text' is initialized properly\n//           createdAt: new Date().toISOString()\n//       }, ...data];\n//       utils.addToLocalStorage(types.NOTES_DATA, updatedData);\n\n//   }\n// }\n//   const handleLogout=()=>{\n//     utils.removeFromLocalStorage('auth_key');\n//     navigate(\"/\");\n//   }\n\n//   return (\n//     <article className={styles.sidebar}>\n//         <BrandLogo  visible={true} type={\"dark\"} className={styles.logo}/>\n//         <section>\n//             {\n//               sidebaritems.map((item,index)=>{\n//                 return(\n//                 <article key={index}  className={styles.item} onClick={()=>handleClick(item)}>\n//                   <Icon icon={item.icon} color={index === 1 ? \"var(--grey-300)\" : \" var(--white)\" }/>\n//                 </article>\n//                 );\n//               }\n//             )}\n//         </section>\n//         <article className={styles.logout}>\n//             <Icon icon={'material-symbols:logout'} onClick={handleLogout}/>\n//         </article>\n//     </article>\n//   )\n// }\n\n// export default SideBar;\n\nimport React, { useState, useEffect } from 'react';\nimport styles from './sidebar.module.scss';\nimport BrandLogo from '../brand';\nimport { Icon } from '@iconify/react';\nimport sidebaritems from \"../../../data/sidebar.json\";\nimport { useNavigate } from 'react-router-dom';\nimport utils from '../../../utils/localstorage';\nimport types from '../../../config/types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SideBar() {\n  _s();\n  const navigate = useNavigate();\n  const [notesData, setNotesData] = useState([]); // State to store notes\n\n  // Fetch notes data on component mount\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/api/notes', {\n          // Assuming your backend API endpoint\n          headers: {\n            'Authorization': `Bearer ${utils.getFromLocalStorage('auth_token')}` // Include auth token in header\n          }\n        });\n        const data = await response.json();\n        setNotesData(data);\n      } catch (error) {\n        console.error('Error fetching notes:', error);\n      }\n    };\n    fetchNotes();\n  }, []); // Empty dependency array for initial fetch\n\n  const handleAddNote = async () => {\n    try {\n      const newNote = {\n        text: \"\",\n        // Ensure 'text' is initialized properly\n        createdAt: new Date().toISOString()\n      };\n      const response = await fetch('/api/notes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${utils.getFromLocalStorage('auth_token')}` // Include auth token in header\n        },\n        body: JSON.stringify(newNote)\n      });\n      if (response.ok) {\n        const updatedData = [newNote, ...notesData]; // Prepend new note to data\n        setNotesData(updatedData);\n        navigate('/notes'); // Navigate to notes page after successful creation\n      } else {\n        console.error('Error creating note:', await response.text());\n      }\n    } catch (error) {\n      console.error('Error adding note:', error);\n    }\n  };\n  const handleLogout = () => {\n    utils.removeFromLocalStorage('auth_key');\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: styles.sidebar,\n    children: [/*#__PURE__*/_jsxDEV(BrandLogo, {\n      visible: true,\n      type: \"dark\",\n      className: styles.logo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: sidebaritems.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"article\", {\n          className: styles.item,\n          onClick: () => {\n            if (item.path === '/notes') {\n              handleAddNote(); // Call handleAddNote on notes click\n            } else {\n              navigate(item.path); // Handle other navigation logic\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: item.icon,\n            color: index === 1 ? \"var(--grey-300)\" : \" var(--white)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: styles.logout,\n      children: /*#__PURE__*/_jsxDEV(Icon, {\n        icon: 'material-symbols:logout',\n        onClick: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(SideBar, \"0Ir1w/j05lUwdYKr0zkPqMwguBg=\", false, function () {\n  return [useNavigate];\n});\n_c = SideBar;\nexport default SideBar;\nvar _c;\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"names":["React","useState","useEffect","styles","BrandLogo","Icon","sidebaritems","useNavigate","utils","types","jsxDEV","_jsxDEV","SideBar","_s","navigate","notesData","setNotesData","fetchNotes","response","fetch","headers","getFromLocalStorage","data","json","error","console","handleAddNote","newNote","text","createdAt","Date","toISOString","method","body","JSON","stringify","ok","updatedData","handleLogout","removeFromLocalStorage","className","sidebar","children","visible","type","logo","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","onClick","path","icon","color","logout","_c","$RefreshReg$"],"sources":["D:/sem 4/cipherschools/project/frontend/src/components/shared/side-bar/index.js"],"sourcesContent":["// import React from 'react'\r\n// import styles from './sidebar.module.scss'\r\n// import BrandLogo from '../brand'\r\n// import {Icon} from '@iconify/react'\r\n// import sidebaritems from \"../../../data/sidebar.json\"\r\n// import { useNavigate } from 'react-router-dom'\r\n// import utils from '../../../utils/localstorage'\r\n// import types from '../../../config/types'\r\n\r\n// function SideBar() {\r\n//   const navigate=useNavigate()\r\n  \r\n  \r\n\r\n// const handleClick = (item) => {\r\n//   if (item.path === '/notes') {\r\n//       const data = utils.getFromLocalStorage(types.NOTES_DATA);\r\n//       const updatedData = [{\r\n//           id: data.length + 1,\r\n//           color: \"rgba(174, 223, 232, 0.6)\",\r\n//           text: \"\",  // Ensure 'text' is initialized properly\r\n//           createdAt: new Date().toISOString()\r\n//       }, ...data];\r\n//       utils.addToLocalStorage(types.NOTES_DATA, updatedData);\r\n      \r\n//   }\r\n// }\r\n//   const handleLogout=()=>{\r\n//     utils.removeFromLocalStorage('auth_key');\r\n//     navigate(\"/\");\r\n//   }\r\n\r\n//   return (\r\n//     <article className={styles.sidebar}>\r\n//         <BrandLogo  visible={true} type={\"dark\"} className={styles.logo}/>\r\n//         <section>\r\n//             {\r\n//               sidebaritems.map((item,index)=>{\r\n//                 return(\r\n//                 <article key={index}  className={styles.item} onClick={()=>handleClick(item)}>\r\n//                   <Icon icon={item.icon} color={index === 1 ? \"var(--grey-300)\" : \" var(--white)\" }/>\r\n//                 </article>\r\n//                 );\r\n//               }\r\n//             )}\r\n//         </section>\r\n//         <article className={styles.logout}>\r\n//             <Icon icon={'material-symbols:logout'} onClick={handleLogout}/>\r\n//         </article>\r\n//     </article>\r\n//   )\r\n// }\r\n\r\n// export default SideBar;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport styles from './sidebar.module.scss';\r\nimport BrandLogo from '../brand';\r\nimport { Icon } from '@iconify/react';\r\nimport sidebaritems from \"../../../data/sidebar.json\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport utils from '../../../utils/localstorage';\r\nimport types from '../../../config/types';\r\n\r\nfunction SideBar() {\r\n  const navigate = useNavigate();\r\n  const [notesData, setNotesData] = useState([]); // State to store notes\r\n\r\n  // Fetch notes data on component mount\r\n  useEffect(() => {\r\n    const fetchNotes = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3001/api/notes', { // Assuming your backend API endpoint\r\n          headers: {\r\n            'Authorization': `Bearer ${utils.getFromLocalStorage('auth_token')}`, // Include auth token in header\r\n          },\r\n        });\r\n        const data = await response.json();\r\n        setNotesData(data);\r\n      } catch (error) {\r\n        console.error('Error fetching notes:', error);\r\n      }\r\n    };\r\n\r\n    fetchNotes();\r\n  }, []); // Empty dependency array for initial fetch\r\n\r\n  const handleAddNote = async () => {\r\n    try {\r\n      const newNote = {\r\n        text: \"\", // Ensure 'text' is initialized properly\r\n        createdAt: new Date().toISOString(),\r\n      };\r\n\r\n      const response = await fetch('/api/notes', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${utils.getFromLocalStorage('auth_token')}`, // Include auth token in header\r\n        },\r\n        body: JSON.stringify(newNote),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const updatedData = [newNote, ...notesData]; // Prepend new note to data\r\n        setNotesData(updatedData);\r\n        navigate('/notes'); // Navigate to notes page after successful creation\r\n      } else {\r\n        console.error('Error creating note:', await response.text());\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding note:', error);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    utils.removeFromLocalStorage('auth_key');\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <article className={styles.sidebar}>\r\n      <BrandLogo visible={true} type={\"dark\"} className={styles.logo} />\r\n      <section>\r\n        {sidebaritems.map((item, index) => {\r\n          return (\r\n            <article key={index} className={styles.item} onClick={() => {\r\n              if (item.path === '/notes') {\r\n                handleAddNote(); // Call handleAddNote on notes click\r\n              } else {\r\n                navigate(item.path); // Handle other navigation logic\r\n              }\r\n            }}>\r\n              <Icon icon={item.icon} color={index === 1 ? \"var(--grey-300)\" : \" var(--white)\" } />\r\n            </article>\r\n          );\r\n        })}\r\n      </section>\r\n      <article className={styles.logout}>\r\n        <Icon icon={'material-symbols:logout'} onClick={handleLogout} />\r\n      </article>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default SideBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}